plugins {
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.3.0'
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

static def getDate() {
	new Date().format('yyyyMMddHHmm')
}


jib {
	extraDirectories {
		paths = ['build/libs']
	}
	from {
		image = 'openjdk:17-alpine'
	}
	to {
		tags = [getDate()]
	}
	container {
		entrypoint = ['java',
					  '-jar', rootProject.name + '-' + project.version + '.jar']

		environment = ["JAVA_TOOL_OPTIONS": "-Xms128M -Xmx1G"]
		labels = [version: project.version, name: project.name, group: project.group]

		creationTime = 'USE_CURRENT_TIMESTAMP'
		format = 'Docker'
	}
}

